name: CI

on:
  push:
    branches:
      - master
      - "v*"
    tags:
      - "v*"
  pull_request:
  schedule:
    - cron: '0 3 * * *' # daily, at 3am

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - run: pip install -r requirements-dev.txt
      - run: make lint

  vermin:
    name: Check that python 2.6/3.0 is supported
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - run: pip install -r requirements-dev.txt
      - run: make vermin

  docs:
    name: Check that readthedocs can be generated
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - run: pip install -r requirements-dev.txt
      - run: cd docs ; make html

  tests:
    strategy:
      fail-fast: true
      matrix:
        python-version:
          - "3.x"
          - "pypy3.9"
          - "pypy3.10"

    name: "Tests (Python: ${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - run: pip install -r requirements-dev.txt
      - run: ./download_test_data.sh
      - run: make test

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    needs:
      - lint
      - tests
      - vermin
      - docs

    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - run: pip install -r requirements-dev.txt
      - run: python setup.py sdist

      - uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
